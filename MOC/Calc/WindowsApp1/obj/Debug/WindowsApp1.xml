<?xml version="1.0"?>
<doc>
<assembly>
<name>
WindowsApp1
</name>
</assembly>
<members>
<member name="T:WindowsApp1.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:WindowsApp1.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:WindowsApp1.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:WindowsApp1.Form1.Button_Equals_Click(System.Object,System.EventArgs)">
 <summary>
 Wenn ein Term angegeben wird, wird dieser zur Berechnung weiter gegeben, ansonsten wird eine Fehlermeldung geworfen
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:WindowsApp1.Form1.Button_Delete_Click(System.Object,System.EventArgs)">
 <summary>
 Setzt alle Listen, sowie die Input und Output Box auf Nothing
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:WindowsApp1.Form1.Button_Reset_Click(System.Object,System.EventArgs)">
 <summary>
 Setzt nur die Internen Listen zurück. lässt dem Benutzer aber seine Eingabe stehen
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:WindowsApp1.Form1.Calculate(System.String)">
 <summary>
 Im String wird nach Rechenoperatoren geschaut. 
 Wird einer gefunden, so wird er in die Liste für Operatoren eingetragen und sein Index in die Liste für die Indexe der Operatoren eingetragen
 Der erste Wert (vor dem ersten Operator) wird in die Liste für Werte eingetragen
 Alle Werte, die dann zwischen zwischen 2 Operatoren stehen, werden bestimmt und auch in die Liste für Werte eingetragen
 Der letzte Wert (nach dem letzten Operator) wird auch in die Liste für Werte eingetragen
 </summary>
 <param name="input">Eingabe als String</param>
</member>
<member name="M:WindowsApp1.Form1.RefactoringLists(System.Int32)">
 <summary>
 Diese Funktion wird nach dem Addieren, Substrahieren, Multiplizieren und nach dem Dividieren aufgerufen, 
 um die Liste der Werte und der Operatoren zu kürzen
 </summary>
 <param name="operatorIndex">Index des Operators</param>
</member>
<member name="M:WindowsApp1.Form1.getNumberOfDotOperators">
 <summary>
 Ermittelt die Anzahl der Punkt Operatoren (* und /) in der Eingabe für den Abbruch der For Schleife für die Punkt Operatoren
 </summary>
 <returns></returns>
</member>
<member name="M:WindowsApp1.Form1.getNumberOfDashOperators">
 <summary>
 Ermittelt die Anzahl der Strich (+ und -) Operatoren in der Eingabe für den Abbruch der For Schleife für die Strich Operatoren
 </summary>
 <returns></returns>
</member>
</members>
</doc>
